ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InitializeSystem,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	InitializeSystem, %function
  22              	InitializeSystem:
  23              	.LFB35:
  24              		.file 1 ".\\main.c"
   1:.\main.c      **** /*****************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** * This is the top level file for the PSoC 4 BLE Lab 3.
   8:.\main.c      **** *
   9:.\main.c      **** * Hardware Dependency:
  10:.\main.c      **** * CY8CKIT-042 BLE Pioneer Kit
  11:.\main.c      **** *
  12:.\main.c      **** ******************************************************************************
  13:.\main.c      **** * Copyright (2014), Cypress Semiconductor Corporation.
  14:.\main.c      **** ******************************************************************************
  15:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  16:.\main.c      **** * protected by and subject to worldwide patent protection (United States and
  17:.\main.c      **** * foreign), United States copyright laws and international treaty provisions.
  18:.\main.c      **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  19:.\main.c      **** * license to copy, use, modify, create derivative works of, and compile the
  20:.\main.c      **** * Cypress Source Code and derivative works for the sole purpose of creating
  21:.\main.c      **** * custom software in support of licensee product to be used only in conjunction
  22:.\main.c      **** * with a Cypress integrated circuit as specified in the applicable agreement.
  23:.\main.c      **** * Any reproduction, modification, translation, compilation, or representation of
  24:.\main.c      **** * this software except as specified above is prohibited without the express
  25:.\main.c      **** * written permission of Cypress.
  26:.\main.c      **** *
  27:.\main.c      **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  28:.\main.c      **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  29:.\main.c      **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  30:.\main.c      **** * Cypress reserves the right to make changes without further notice to the
  31:.\main.c      **** * materials described herein. Cypress does not assume any liability arising out
  32:.\main.c      **** * of the application or use of any product or circuit described herein. Cypress
  33:.\main.c      **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 2


  34:.\main.c      **** * systems where a malfunction or failure may reasonably be expected to result in
  35:.\main.c      **** * significant injury to the user. The inclusion of Cypress' product in a life-
  36:.\main.c      **** * support systems application implies that the manufacturer assumes all risk of
  37:.\main.c      **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  38:.\main.c      **** * limited by and subject to the applicable Cypress software license agreement.
  39:.\main.c      **** *****************************************************************************/
  40:.\main.c      **** 
  41:.\main.c      **** 
  42:.\main.c      **** /*****************************************************************************
  43:.\main.c      **** * Included headers
  44:.\main.c      **** *****************************************************************************/
  45:.\main.c      **** #include <project.h>
  46:.\main.c      **** #include <stdbool.h>
  47:.\main.c      **** #include "main.h"
  48:.\main.c      **** #include "HeartRateProcessing.h"
  49:.\main.c      **** #include "BleProcessing.h"
  50:.\main.c      **** #include "WatchdogTimer.h"
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** /*****************************************************************************
  54:.\main.c      **** * Macros
  55:.\main.c      **** *****************************************************************************/
  56:.\main.c      **** #define TIME_SINCE_CONNECTED_MS         (5000)
  57:.\main.c      **** 
  58:.\main.c      **** 
  59:.\main.c      **** /*****************************************************************************
  60:.\main.c      **** * Global variables
  61:.\main.c      **** *****************************************************************************/
  62:.\main.c      **** //static CYBLE_GAP_CONN_UPDATE_PARAM_T hrmConnectionParam =
  63:.\main.c      **** //{
  64:.\main.c      **** //    16,         /* Minimum connection interval of 20 ms */
  65:.\main.c      **** //    16,         /* Maximum connection interval of 20 ms */
  66:.\main.c      **** //    49,         /* Slave latency of 49 */
  67:.\main.c      **** //    500         /* Supervision timeout of 5 seconds */
  68:.\main.c      **** //};
  69:.\main.c      **** 
  70:.\main.c      **** 
  71:.\main.c      **** /*****************************************************************************
  72:.\main.c      **** * Static function definitions
  73:.\main.c      **** *****************************************************************************/
  74:.\main.c      **** 
  75:.\main.c      **** /*****************************************************************************
  76:.\main.c      **** * Function Name: InitializeSystem
  77:.\main.c      **** ******************************************************************************
  78:.\main.c      **** * Summary:
  79:.\main.c      **** * Initializes all the blocks of the system.
  80:.\main.c      **** *
  81:.\main.c      **** * Parameters:
  82:.\main.c      **** * None
  83:.\main.c      **** *
  84:.\main.c      **** * Return:
  85:.\main.c      **** * None
  86:.\main.c      **** *
  87:.\main.c      **** * Theory:
  88:.\main.c      **** * The function enables the Opamp and ADC for the heart rate measurement, and 
  89:.\main.c      **** * setups the BLE component. It also starts the watchdog timer and ensures that 
  90:.\main.c      **** * all the status LEDs are off at system startup. 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 3


  91:.\main.c      **** *
  92:.\main.c      **** * Side Effects:
  93:.\main.c      **** * None
  94:.\main.c      **** *
  95:.\main.c      **** *****************************************************************************/
  96:.\main.c      **** static void InitializeSystem(void)
  97:.\main.c      **** {
  25              		.loc 1 97 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 00AF     		add	r7, sp, #0
  32              		.cfi_def_cfa_register 7
  98:.\main.c      ****     #if (RGB_LED_IN_PROJECT)
  99:.\main.c      ****         /* Turn off all LEDs */
 100:.\main.c      ****         Led_Advertising_Green_Write(1);
  33              		.loc 1 100 0
  34 0004 0120     		mov	r0, #1
  35 0006 FFF7FEFF 		bl	Led_Advertising_Green_Write
 101:.\main.c      ****         Led_Connected_Blue_Write(1);
  36              		.loc 1 101 0
  37 000a 0120     		mov	r0, #1
  38 000c FFF7FEFF 		bl	Led_Connected_Blue_Write
 102:.\main.c      ****     #endif  /* #if (RGB_LED_IN_PROJECT) */
 103:.\main.c      **** 
 104:.\main.c      ****     /* Enabling Global interrupts */
 105:.\main.c      ****     CyGlobalIntEnable; 
  39              		.loc 1 105 0
  40              	@ 105 ".\main.c" 1
  41 0010 62B6     		CPSIE   i
  42              	@ 0 "" 2
 106:.\main.c      **** 	
 107:.\main.c      ****     /* Start Opamp and ADC components */
 108:.\main.c      **** 	Opamp_Start();
  43              		.loc 1 108 0
  44              		.code	16
  45 0012 FFF7FEFF 		bl	Opamp_Start
 109:.\main.c      ****     ADC_Start();
  46              		.loc 1 109 0
  47 0016 FFF7FEFF 		bl	ADC_Start
 110:.\main.c      ****     PWM_1_Start();
  48              		.loc 1 110 0
  49 001a FFF7FEFF 		bl	PWM_1_Start
 111:.\main.c      **** 	
 112:.\main.c      ****     /* Start BLE component */
 113:.\main.c      ****     CyBle_Start(GeneralEventHandler);
  50              		.loc 1 113 0
  51 001e 064B     		ldr	r3, .L2
  52 0020 181C     		mov	r0, r3
  53 0022 FFF7FEFF 		bl	CyBle_Start
 114:.\main.c      ****     
 115:.\main.c      ****     
 116:.\main.c      ****     /* Register the Heart Rate Service event handler callback. The function
 117:.\main.c      ****      * to be registered is HrsEventHandler().
 118:.\main.c      ****      */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 4


 119:.\main.c      **** 	CyBle_HrsRegisterAttrCallback(HrsEventHandler);
  54              		.loc 1 119 0
  55 0026 054B     		ldr	r3, .L2+4
  56 0028 181C     		mov	r0, r3
  57 002a FFF7FEFF 		bl	CyBle_HrsRegisterAttrCallback
 120:.\main.c      ****     
 121:.\main.c      ****     
 122:.\main.c      ****     /* Start the Watchdog Timer */
 123:.\main.c      **** 	WatchdogTimer_Start();
  58              		.loc 1 123 0
  59 002e FFF7FEFF 		bl	WatchdogTimer_Start
 124:.\main.c      **** }
  60              		.loc 1 124 0
  61 0032 BD46     		mov	sp, r7
  62              		@ sp needed
  63 0034 80BD     		pop	{r7, pc}
  64              	.L3:
  65 0036 C046     		.align	2
  66              	.L2:
  67 0038 00000000 		.word	GeneralEventHandler
  68 003c 00000000 		.word	HrsEventHandler
  69              		.cfi_endproc
  70              	.LFE35:
  71              		.size	InitializeSystem, .-InitializeSystem
  72              		.section	.text.main,"ax",%progbits
  73              		.align	2
  74              		.global	main
  75              		.code	16
  76              		.thumb_func
  77              		.type	main, %function
  78              	main:
  79              	.LFB36:
 125:.\main.c      **** 
 126:.\main.c      **** 
 127:.\main.c      **** /*****************************************************************************
 128:.\main.c      **** * Public function definitions
 129:.\main.c      **** *****************************************************************************/
 130:.\main.c      **** 
 131:.\main.c      **** /*****************************************************************************
 132:.\main.c      **** * Function Name: main
 133:.\main.c      **** ******************************************************************************
 134:.\main.c      **** * Summary:
 135:.\main.c      **** * The main function for the project.
 136:.\main.c      **** *
 137:.\main.c      **** * Parameters:
 138:.\main.c      **** * None
 139:.\main.c      **** *
 140:.\main.c      **** * Return:
 141:.\main.c      **** * None
 142:.\main.c      **** *
 143:.\main.c      **** * Theory:
 144:.\main.c      **** * The main function first calls the initialization function to start the 
 145:.\main.c      **** * system, and then enters a loop to run forever. In the main loop, it scans
 146:.\main.c      **** * the heart rate first, then sends a notification packet every second to a 
 147:.\main.c      **** * BLE connected device. It then enters low power (deep sleep) state, waiting
 148:.\main.c      **** * for the periodic wakeup interrupt from watchdog timer.
 149:.\main.c      **** * When the device is disconnected or when advertisement timeout happens, 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 5


 150:.\main.c      **** * the device enters Hibernate mode, waiting for the SW2 switch press to wakeup.
 151:.\main.c      **** *
 152:.\main.c      **** * Side Effects:
 153:.\main.c      **** * None
 154:.\main.c      **** *
 155:.\main.c      **** *****************************************************************************/
 156:.\main.c      **** int main()
 157:.\main.c      **** {
  80              		.loc 1 157 0
  81              		.cfi_startproc
  82 0000 90B5     		push	{r4, r7, lr}
  83              		.cfi_def_cfa_offset 12
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 83B0     		sub	sp, sp, #12
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
 158:.\main.c      ****     static uint32 previousTimestamp = 0;
 159:.\main.c      ****     static uint32 currentTimestamp = 0;
 160:.\main.c      ****     CYBLE_LP_MODE_T bleMode;
 161:.\main.c      ****     uint8 interruptStatus;
 162:.\main.c      ****     
 163:.\main.c      ****     /* Initialize all blocks of the system */
 164:.\main.c      **** 	InitializeSystem();
  91              		.loc 1 164 0
  92 0006 FFF7FEFF 		bl	InitializeSystem
  93              	.L13:
 165:.\main.c      ****     
 166:.\main.c      ****     /* Run forever */
 167:.\main.c      ****     for(;;)
 168:.\main.c      ****     {
 169:.\main.c      ****         /* Wake up ADC from low power mode */
 170:.\main.c      ****         ADC_Wakeup();
  94              		.loc 1 170 0
  95 000a FFF7FEFF 		bl	ADC_Wakeup
 171:.\main.c      ****         
 172:.\main.c      ****         /* Analog Front End. 
 173:.\main.c      ****          * Detects the input signal and measures Heart Rate 
 174:.\main.c      ****          */
 175:.\main.c      ****         ProcessHeartRateSignal();
  96              		.loc 1 175 0
  97 000e FFF7FEFF 		bl	ProcessHeartRateSignal
 176:.\main.c      **** 
 177:.\main.c      ****         /* Put ADC in low power mode */
 178:.\main.c      ****         ADC_Sleep();
  98              		.loc 1 178 0
  99 0012 FFF7FEFF 		bl	ADC_Sleep
 179:.\main.c      ****         
 180:.\main.c      ****         /* Measure the current system timestamp from watchdog timer */
 181:.\main.c      ****         currentTimestamp = WatchdogTimer_GetTimestamp();        
 100              		.loc 1 181 0
 101 0016 FFF7FEFF 		bl	WatchdogTimer_GetTimestamp
 102 001a 021C     		mov	r2, r0
 103 001c 2B4B     		ldr	r3, .L14
 104 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 6


 182:.\main.c      **** 
 183:.\main.c      **** //        /* Update BLE connection parameters a few seconds after connection */
 184:.\main.c      **** //        if((CyBle_GetState() == CYBLE_STATE_CONNECTED) && 
 185:.\main.c      **** //           (connParamRequestState == CONN_PARAM_REQUEST_NOT_SENT))
 186:.\main.c      **** //        {
 187:.\main.c      **** //            if((currentTimestamp - timestampWhenConnected) > TIME_SINCE_CONNECTED_MS)
 188:.\main.c      **** //            {
 189:.\main.c      **** //                CyBle_L2capLeConnectionParamUpdateRequest(cyBle_connHandle.bdHandle, &hrmConnecti
 190:.\main.c      **** //                connParamRequestState = CONN_PARAM_REQUEST_SENT;
 191:.\main.c      **** //            }
 192:.\main.c      **** //        }
 193:.\main.c      ****         
 194:.\main.c      ****         
 195:.\main.c      ****         /* Send Heart Rate notification over BLE every second.
 196:.\main.c      ****          * Check if the current timestamp minus previous exceeds 1000 ms.
 197:.\main.c      ****          */
 198:.\main.c      ****         if((currentTimestamp - previousTimestamp) >= 1000)
 105              		.loc 1 198 0
 106 0020 2A4B     		ldr	r3, .L14
 107 0022 1A68     		ldr	r2, [r3]
 108 0024 2A4B     		ldr	r3, .L14+4
 109 0026 1B68     		ldr	r3, [r3]
 110 0028 D21A     		sub	r2, r2, r3
 111 002a 2A4B     		ldr	r3, .L14+8
 112 002c 9A42     		cmp	r2, r3
 113 002e 06D9     		bls	.L5
 199:.\main.c      ****         {
 200:.\main.c      ****             /* Call API defined in BleProcessing.c to send 
 201:.\main.c      ****              * notification over BLE.
 202:.\main.c      ****              */
 203:.\main.c      ****             SendHeartRateOverBLE();
 114              		.loc 1 203 0
 115 0030 FFF7FEFF 		bl	SendHeartRateOverBLE
 204:.\main.c      ****             
 205:.\main.c      ****             /* Update the previous timestamp with the current timestamp. */
 206:.\main.c      ****             previousTimestamp = currentTimestamp;
 116              		.loc 1 206 0
 117 0034 254B     		ldr	r3, .L14
 118 0036 1A68     		ldr	r2, [r3]
 119 0038 254B     		ldr	r3, .L14+4
 120 003a 1A60     		str	r2, [r3]
 207:.\main.c      ****         }
 208:.\main.c      **** 
 209:.\main.c      ****         /* Try to stay in low power mode until the next watchdog interrupt */
 210:.\main.c      ****         while(WatchdogTimer_GetTimestamp() == currentTimestamp)
 121              		.loc 1 210 0
 122 003c 24E0     		b	.L6
 123              	.L5:
 124 003e 23E0     		b	.L6
 125              	.L11:
 211:.\main.c      ****         {
 212:.\main.c      ****             /* Process any pending BLE events */
 213:.\main.c      ****             CyBle_ProcessEvents();
 126              		.loc 1 213 0
 127 0040 FFF7FEFF 		bl	CyBle_ProcessEvents
 214:.\main.c      ****             
 215:.\main.c      ****             /* The idea of low power operation is to first request the BLE 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 7


 216:.\main.c      ****              * block go to Deep Sleep, and then check whether it actually
 217:.\main.c      ****              * entered Deep Sleep. This is important because the BLE block
 218:.\main.c      ****              * runs asynchronous to the rest of the application and thus
 219:.\main.c      ****              * could be busy/idle independent of the application state. 
 220:.\main.c      ****              * 
 221:.\main.c      ****              * Once the BLE block is in Deep Sleep, only then the system 
 222:.\main.c      ****              * can enter Deep Sleep. This is important to maintain the BLE 
 223:.\main.c      ****              * connection alive while being in Deep Sleep.
 224:.\main.c      ****              */
 225:.\main.c      **** 
 226:.\main.c      ****             
 227:.\main.c      ****             /* Request the BLE block to enter Deep Sleep */
 228:.\main.c      ****             //bleMode = CyBle_EnterLPM(CYBLE_BLESS_DEEPSLEEP);
 229:.\main.c      **** 
 230:.\main.c      ****             
 231:.\main.c      ****             /* Check if the BLE block entered Deep Sleep and if so, then the 
 232:.\main.c      ****              * system can enter Deep Sleep. This is done inside a Critical 
 233:.\main.c      ****              * Section (where global interrupts are disabled) to avoid a 
 234:.\main.c      ****              * race condition between application main (that wants to go to 
 235:.\main.c      ****              * Deep Sleep) and other interrupts (which keep the device from 
 236:.\main.c      ****              * going to Deep Sleep). 
 237:.\main.c      ****              */
 238:.\main.c      ****             interruptStatus = CyEnterCriticalSection();
 128              		.loc 1 238 0
 129 0044 FC1D     		add	r4, r7, #7
 130 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 131 004a 031C     		mov	r3, r0
 132 004c 2370     		strb	r3, [r4]
 239:.\main.c      ****             
 240:.\main.c      ****             /* Check if the BLE block entered Deep Sleep */
 241:.\main.c      ****             if(CYBLE_BLESS_DEEPSLEEP == bleMode)
 133              		.loc 1 241 0
 134 004e BB1D     		add	r3, r7, #6
 135 0050 1B78     		ldrb	r3, [r3]
 136 0052 032B     		cmp	r3, #3
 137 0054 0CD1     		bne	.L7
 242:.\main.c      ****             {
 243:.\main.c      ****                 /* Check the current state of BLE - System can enter Deep Sleep
 244:.\main.c      ****                  * only when the BLE block is starting the ECO (during 
 245:.\main.c      ****                  * pre-processing for a new connection event) or when it is 
 246:.\main.c      ****                  * idle.
 247:.\main.c      ****                  */
 248:.\main.c      ****                 if((CyBle_GetBleSsState() == CYBLE_BLESS_STATE_ECO_ON) ||
 138              		.loc 1 248 0
 139 0056 FFF7FEFF 		bl	CyBle_GetBleSsState
 140 005a 031C     		mov	r3, r0
 141 005c 042B     		cmp	r3, #4
 142 005e 04D0     		beq	.L8
 249:.\main.c      ****                    (CyBle_GetBleSsState() == CYBLE_BLESS_STATE_DEEPSLEEP))
 143              		.loc 1 249 0 discriminator 1
 144 0060 FFF7FEFF 		bl	CyBle_GetBleSsState
 145 0064 031C     		mov	r3, r0
 248:.\main.c      ****                 if((CyBle_GetBleSsState() == CYBLE_BLESS_STATE_ECO_ON) ||
 146              		.loc 1 248 0 discriminator 1
 147 0066 062B     		cmp	r3, #6
 148 0068 09D1     		bne	.L10
 149              	.L8:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 8


 250:.\main.c      ****                 {
 251:.\main.c      ****                     CySysPmDeepSleep();
 150              		.loc 1 251 0
 151 006a FFF7FEFF 		bl	CySysPmDeepSleep
 152 006e 06E0     		b	.L10
 153              	.L7:
 252:.\main.c      ****                 }
 253:.\main.c      ****             }
 254:.\main.c      ****             /* The else condition signifies that the BLE block cannot enter 
 255:.\main.c      ****              * Deep Sleep and is in Active mode.  
 256:.\main.c      ****              */
 257:.\main.c      ****             else
 258:.\main.c      ****             {
 259:.\main.c      ****                 /* At this point, the CPU can enter Sleep, but Deep Sleep is not
 260:.\main.c      ****                  * allowed. 
 261:.\main.c      ****                  * There is one exception - at a connection event, when the BLE 
 262:.\main.c      ****                  * Rx/Tx has just finished, and the post processing for the 
 263:.\main.c      ****                  * connection event is ongoing, the CPU cannot go to sleep.
 264:.\main.c      ****                  * The CPU should wait in Active mode until the post processing 
 265:.\main.c      ****                  * is complete while continuously polling the BLE low power 
 266:.\main.c      ****                  * entry. As soon as post processing is complete, the BLE block 
 267:.\main.c      ****                  * would enter Deep Sleep (because of the polling) and the 
 268:.\main.c      ****                  * system Deep Sleep would then be entered. Deep Sleep is the 
 269:.\main.c      ****                  * preferred low power mode since it takes much lesser current.
 270:.\main.c      ****                  */
 271:.\main.c      ****                 if(CyBle_GetBleSsState() != CYBLE_BLESS_STATE_EVENT_CLOSE)
 154              		.loc 1 271 0
 155 0070 FFF7FEFF 		bl	CyBle_GetBleSsState
 156 0074 031C     		mov	r3, r0
 157 0076 022B     		cmp	r3, #2
 158 0078 01D0     		beq	.L10
 272:.\main.c      ****                 {
 273:.\main.c      ****                     CySysPmSleep();
 159              		.loc 1 273 0
 160 007a FFF7FEFF 		bl	CySysPmSleep
 161              	.L10:
 274:.\main.c      ****                 }
 275:.\main.c      ****             }
 276:.\main.c      ****             
 277:.\main.c      ****             /* Exit Critical section - Global interrupts are enabled again */
 278:.\main.c      ****             CyExitCriticalSection(interruptStatus);
 162              		.loc 1 278 0
 163 007e FB1D     		add	r3, r7, #7
 164 0080 1B78     		ldrb	r3, [r3]
 165 0082 181C     		mov	r0, r3
 166 0084 FFF7FEFF 		bl	CyExitCriticalSection
 167              	.L6:
 210:.\main.c      ****         while(WatchdogTimer_GetTimestamp() == currentTimestamp)
 168              		.loc 1 210 0 discriminator 1
 169 0088 FFF7FEFF 		bl	WatchdogTimer_GetTimestamp
 170 008c 021C     		mov	r2, r0
 171 008e 0F4B     		ldr	r3, .L14
 172 0090 1B68     		ldr	r3, [r3]
 173 0092 9A42     		cmp	r2, r3
 174 0094 D4D0     		beq	.L11
 279:.\main.c      ****         }
 280:.\main.c      **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 9


 281:.\main.c      ****         /* Hibernate entry point - Hibernate is entered upon a BLE disconnect
 282:.\main.c      ****          * event or advertisement timeout. Wakeup happens via SW2 switch press, 
 283:.\main.c      ****          * upon which the execution starts from the first line of code. 
 284:.\main.c      ****          * The I/O state, RAM and UDBs are retained during Hibernate.
 285:.\main.c      ****          */
 286:.\main.c      ****         if(enterHibernateFlag)
 175              		.loc 1 286 0
 176 0096 104B     		ldr	r3, .L14+12
 177 0098 1B78     		ldrb	r3, [r3]
 178 009a 002B     		cmp	r3, #0
 179 009c 14D0     		beq	.L12
 287:.\main.c      ****         {
 288:.\main.c      ****             /* Stop the BLE component */
 289:.\main.c      ****             CyBle_Stop();
 180              		.loc 1 289 0
 181 009e FFF7FEFF 		bl	CyBle_Stop
 290:.\main.c      ****             
 291:.\main.c      ****             /* Enable the Hibernate wakeup functionality */
 292:.\main.c      ****             SW2_Switch_ClearInterrupt();
 182              		.loc 1 292 0
 183 00a2 FFF7FEFF 		bl	SW2_Switch_ClearInterrupt
 293:.\main.c      ****             Wakeup_ISR_Start();
 184              		.loc 1 293 0
 185 00a6 FFF7FEFF 		bl	Wakeup_ISR_Start
 294:.\main.c      ****             
 295:.\main.c      ****             #if (RGB_LED_IN_PROJECT)
 296:.\main.c      ****                 /* Turn off Green and Blue LEDs to indicate Hibernate */
 297:.\main.c      ****                 Led_Advertising_Green_Write(1);
 186              		.loc 1 297 0
 187 00aa 0120     		mov	r0, #1
 188 00ac FFF7FEFF 		bl	Led_Advertising_Green_Write
 298:.\main.c      ****                 Led_Connected_Blue_Write(1);
 189              		.loc 1 298 0
 190 00b0 0120     		mov	r0, #1
 191 00b2 FFF7FEFF 		bl	Led_Connected_Blue_Write
 299:.\main.c      ****                 
 300:.\main.c      ****                 /* Change the GPIO state to High-Z */
 301:.\main.c      ****                 Led_Advertising_Green_SetDriveMode(Led_Advertising_Green_DM_ALG_HIZ);
 192              		.loc 1 301 0
 193 00b6 0020     		mov	r0, #0
 194 00b8 FFF7FEFF 		bl	Led_Advertising_Green_SetDriveMode
 302:.\main.c      ****                 Led_Connected_Blue_SetDriveMode(Led_Connected_Blue_DM_ALG_HIZ);
 195              		.loc 1 302 0
 196 00bc 0020     		mov	r0, #0
 197 00be FFF7FEFF 		bl	Led_Connected_Blue_SetDriveMode
 303:.\main.c      ****             #endif  /* #if (RGB_LED_IN_PROJECT) */
 304:.\main.c      ****             
 305:.\main.c      ****             /* Enter hibernate mode */
 306:.\main.c      ****             CySysPmHibernate();
 198              		.loc 1 306 0
 199 00c2 FFF7FEFF 		bl	CySysPmHibernate
 307:.\main.c      ****         }
 308:.\main.c      ****     }
 200              		.loc 1 308 0
 201 00c6 A0E7     		b	.L13
 202              	.L12:
 203 00c8 9FE7     		b	.L13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 10


 204              	.L15:
 205 00ca C046     		.align	2
 206              	.L14:
 207 00cc 00000000 		.word	currentTimestamp.6590
 208 00d0 04000000 		.word	previousTimestamp.6589
 209 00d4 E7030000 		.word	999
 210 00d8 00000000 		.word	enterHibernateFlag
 211              		.cfi_endproc
 212              	.LFE36:
 213              		.size	main, .-main
 214              		.bss
 215              		.align	2
 216              	currentTimestamp.6590:
 217 0000 00000000 		.space	4
 218              		.align	2
 219              	previousTimestamp.6589:
 220 0004 00000000 		.space	4
 221              		.text
 222              	.Letext0:
 223              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 224              		.file 3 ".\\Generated_Source\\PSoC4/BLE_1_Stack.h"
 225              		.file 4 ".\\BleProcessing.h"
 226              		.section	.debug_info,"",%progbits
 227              	.Ldebug_info0:
 228 0000 85010000 		.4byte	0x185
 229 0004 0400     		.2byte	0x4
 230 0006 00000000 		.4byte	.Ldebug_abbrev0
 231 000a 04       		.byte	0x4
 232 000b 01       		.uleb128 0x1
 233 000c 80000000 		.4byte	.LASF34
 234 0010 01       		.byte	0x1
 235 0011 21010000 		.4byte	.LASF35
 236 0015 D9020000 		.4byte	.LASF36
 237 0019 00000000 		.4byte	.Ldebug_ranges0+0
 238 001d 00000000 		.4byte	0
 239 0021 00000000 		.4byte	.Ldebug_line0
 240 0025 02       		.uleb128 0x2
 241 0026 01       		.byte	0x1
 242 0027 06       		.byte	0x6
 243 0028 BA020000 		.4byte	.LASF0
 244 002c 02       		.uleb128 0x2
 245 002d 01       		.byte	0x1
 246 002e 08       		.byte	0x8
 247 002f 13010000 		.4byte	.LASF1
 248 0033 02       		.uleb128 0x2
 249 0034 02       		.byte	0x2
 250 0035 05       		.byte	0x5
 251 0036 86020000 		.4byte	.LASF2
 252 003a 02       		.uleb128 0x2
 253 003b 02       		.byte	0x2
 254 003c 07       		.byte	0x7
 255 003d 3D000000 		.4byte	.LASF3
 256 0041 02       		.uleb128 0x2
 257 0042 04       		.byte	0x4
 258 0043 05       		.byte	0x5
 259 0044 A0020000 		.4byte	.LASF4
 260 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 11


 261 0049 04       		.byte	0x4
 262 004a 07       		.byte	0x7
 263 004b 2A010000 		.4byte	.LASF5
 264 004f 02       		.uleb128 0x2
 265 0050 08       		.byte	0x8
 266 0051 05       		.byte	0x5
 267 0052 2F020000 		.4byte	.LASF6
 268 0056 02       		.uleb128 0x2
 269 0057 08       		.byte	0x8
 270 0058 07       		.byte	0x7
 271 0059 FC000000 		.4byte	.LASF7
 272 005d 03       		.uleb128 0x3
 273 005e 04       		.byte	0x4
 274 005f 05       		.byte	0x5
 275 0060 696E7400 		.ascii	"int\000"
 276 0064 02       		.uleb128 0x2
 277 0065 04       		.byte	0x4
 278 0066 07       		.byte	0x7
 279 0067 B3010000 		.4byte	.LASF8
 280 006b 04       		.uleb128 0x4
 281 006c 3C010000 		.4byte	.LASF9
 282 0070 02       		.byte	0x2
 283 0071 A1       		.byte	0xa1
 284 0072 2C000000 		.4byte	0x2c
 285 0076 04       		.uleb128 0x4
 286 0077 90010000 		.4byte	.LASF10
 287 007b 02       		.byte	0x2
 288 007c A3       		.byte	0xa3
 289 007d 48000000 		.4byte	0x48
 290 0081 02       		.uleb128 0x2
 291 0082 04       		.byte	0x4
 292 0083 04       		.byte	0x4
 293 0084 7A000000 		.4byte	.LASF11
 294 0088 02       		.uleb128 0x2
 295 0089 08       		.byte	0x8
 296 008a 04       		.byte	0x4
 297 008b 84010000 		.4byte	.LASF12
 298 008f 02       		.uleb128 0x2
 299 0090 01       		.byte	0x1
 300 0091 08       		.byte	0x8
 301 0092 C0010000 		.4byte	.LASF13
 302 0096 02       		.uleb128 0x2
 303 0097 04       		.byte	0x4
 304 0098 07       		.byte	0x7
 305 0099 26020000 		.4byte	.LASF14
 306 009d 05       		.uleb128 0x5
 307 009e 01       		.byte	0x1
 308 009f 03       		.byte	0x3
 309 00a0 F801     		.2byte	0x1f8
 310 00a2 C6000000 		.4byte	0xc6
 311 00a6 06       		.uleb128 0x6
 312 00a7 C6020000 		.4byte	.LASF15
 313 00ab 01       		.sleb128 1
 314 00ac 06       		.uleb128 0x6
 315 00ad 19000000 		.4byte	.LASF16
 316 00b1 02       		.sleb128 2
 317 00b2 06       		.uleb128 0x6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 12


 318 00b3 C5010000 		.4byte	.LASF17
 319 00b7 03       		.sleb128 3
 320 00b8 06       		.uleb128 0x6
 321 00b9 6E010000 		.4byte	.LASF18
 322 00bd 04       		.sleb128 4
 323 00be 06       		.uleb128 0x6
 324 00bf 42010000 		.4byte	.LASF19
 325 00c3 FF01     		.sleb128 255
 326 00c5 00       		.byte	0
 327 00c6 07       		.uleb128 0x7
 328 00c7 90020000 		.4byte	.LASF20
 329 00cb 03       		.byte	0x3
 330 00cc 1402     		.2byte	0x214
 331 00ce 9D000000 		.4byte	0x9d
 332 00d2 05       		.uleb128 0x5
 333 00d3 01       		.byte	0x1
 334 00d4 03       		.byte	0x3
 335 00d5 1802     		.2byte	0x218
 336 00d7 0D010000 		.4byte	0x10d
 337 00db 06       		.uleb128 0x6
 338 00dc 00000000 		.4byte	.LASF21
 339 00e0 01       		.sleb128 1
 340 00e1 06       		.uleb128 0x6
 341 00e2 DB010000 		.4byte	.LASF22
 342 00e6 02       		.sleb128 2
 343 00e7 06       		.uleb128 0x6
 344 00e8 56010000 		.4byte	.LASF23
 345 00ec 03       		.sleb128 3
 346 00ed 06       		.uleb128 0x6
 347 00ee 50000000 		.4byte	.LASF24
 348 00f2 04       		.sleb128 4
 349 00f3 06       		.uleb128 0x6
 350 00f4 69020000 		.4byte	.LASF25
 351 00f8 05       		.sleb128 5
 352 00f9 06       		.uleb128 0x6
 353 00fa 3D020000 		.4byte	.LASF26
 354 00fe 06       		.sleb128 6
 355 00ff 06       		.uleb128 0x6
 356 0100 97010000 		.4byte	.LASF27
 357 0104 07       		.sleb128 7
 358 0105 06       		.uleb128 0x6
 359 0106 0C020000 		.4byte	.LASF28
 360 010a FF01     		.sleb128 255
 361 010c 00       		.byte	0
 362 010d 08       		.uleb128 0x8
 363 010e 69000000 		.4byte	.LASF37
 364 0112 01       		.byte	0x1
 365 0113 60       		.byte	0x60
 366 0114 00000000 		.4byte	.LFB35
 367 0118 40000000 		.4byte	.LFE35-.LFB35
 368 011c 01       		.uleb128 0x1
 369 011d 9C       		.byte	0x9c
 370 011e 09       		.uleb128 0x9
 371 011f 8B010000 		.4byte	.LASF38
 372 0123 01       		.byte	0x1
 373 0124 9C       		.byte	0x9c
 374 0125 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 13


 375 0129 00000000 		.4byte	.LFB36
 376 012d DC000000 		.4byte	.LFE36-.LFB36
 377 0131 01       		.uleb128 0x1
 378 0132 9C       		.byte	0x9c
 379 0133 76010000 		.4byte	0x176
 380 0137 0A       		.uleb128 0xa
 381 0138 2B000000 		.4byte	.LASF29
 382 013c 01       		.byte	0x1
 383 013d 9E       		.byte	0x9e
 384 013e 76000000 		.4byte	0x76
 385 0142 05       		.uleb128 0x5
 386 0143 03       		.byte	0x3
 387 0144 04000000 		.4byte	previousTimestamp.6589
 388 0148 0A       		.uleb128 0xa
 389 0149 A9020000 		.4byte	.LASF30
 390 014d 01       		.byte	0x1
 391 014e 9F       		.byte	0x9f
 392 014f 76000000 		.4byte	0x76
 393 0153 05       		.uleb128 0x5
 394 0154 03       		.byte	0x3
 395 0155 00000000 		.4byte	currentTimestamp.6590
 396 0159 0A       		.uleb128 0xa
 397 015a 1C030000 		.4byte	.LASF31
 398 015e 01       		.byte	0x1
 399 015f A0       		.byte	0xa0
 400 0160 C6000000 		.4byte	0xc6
 401 0164 02       		.uleb128 0x2
 402 0165 91       		.byte	0x91
 403 0166 6E       		.sleb128 -18
 404 0167 0A       		.uleb128 0xa
 405 0168 59020000 		.4byte	.LASF32
 406 016c 01       		.byte	0x1
 407 016d A1       		.byte	0xa1
 408 016e 6B000000 		.4byte	0x6b
 409 0172 02       		.uleb128 0x2
 410 0173 91       		.byte	0x91
 411 0174 6F       		.sleb128 -17
 412 0175 00       		.byte	0
 413 0176 0B       		.uleb128 0xb
 414 0177 F9010000 		.4byte	.LASF39
 415 017b 04       		.byte	0x4
 416 017c 43       		.byte	0x43
 417 017d 81010000 		.4byte	0x181
 418 0181 02       		.uleb128 0x2
 419 0182 01       		.byte	0x1
 420 0183 02       		.byte	0x2
 421 0184 16030000 		.4byte	.LASF33
 422 0188 00       		.byte	0
 423              		.section	.debug_abbrev,"",%progbits
 424              	.Ldebug_abbrev0:
 425 0000 01       		.uleb128 0x1
 426 0001 11       		.uleb128 0x11
 427 0002 01       		.byte	0x1
 428 0003 25       		.uleb128 0x25
 429 0004 0E       		.uleb128 0xe
 430 0005 13       		.uleb128 0x13
 431 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 14


 432 0007 03       		.uleb128 0x3
 433 0008 0E       		.uleb128 0xe
 434 0009 1B       		.uleb128 0x1b
 435 000a 0E       		.uleb128 0xe
 436 000b 55       		.uleb128 0x55
 437 000c 17       		.uleb128 0x17
 438 000d 11       		.uleb128 0x11
 439 000e 01       		.uleb128 0x1
 440 000f 10       		.uleb128 0x10
 441 0010 17       		.uleb128 0x17
 442 0011 00       		.byte	0
 443 0012 00       		.byte	0
 444 0013 02       		.uleb128 0x2
 445 0014 24       		.uleb128 0x24
 446 0015 00       		.byte	0
 447 0016 0B       		.uleb128 0xb
 448 0017 0B       		.uleb128 0xb
 449 0018 3E       		.uleb128 0x3e
 450 0019 0B       		.uleb128 0xb
 451 001a 03       		.uleb128 0x3
 452 001b 0E       		.uleb128 0xe
 453 001c 00       		.byte	0
 454 001d 00       		.byte	0
 455 001e 03       		.uleb128 0x3
 456 001f 24       		.uleb128 0x24
 457 0020 00       		.byte	0
 458 0021 0B       		.uleb128 0xb
 459 0022 0B       		.uleb128 0xb
 460 0023 3E       		.uleb128 0x3e
 461 0024 0B       		.uleb128 0xb
 462 0025 03       		.uleb128 0x3
 463 0026 08       		.uleb128 0x8
 464 0027 00       		.byte	0
 465 0028 00       		.byte	0
 466 0029 04       		.uleb128 0x4
 467 002a 16       		.uleb128 0x16
 468 002b 00       		.byte	0
 469 002c 03       		.uleb128 0x3
 470 002d 0E       		.uleb128 0xe
 471 002e 3A       		.uleb128 0x3a
 472 002f 0B       		.uleb128 0xb
 473 0030 3B       		.uleb128 0x3b
 474 0031 0B       		.uleb128 0xb
 475 0032 49       		.uleb128 0x49
 476 0033 13       		.uleb128 0x13
 477 0034 00       		.byte	0
 478 0035 00       		.byte	0
 479 0036 05       		.uleb128 0x5
 480 0037 04       		.uleb128 0x4
 481 0038 01       		.byte	0x1
 482 0039 0B       		.uleb128 0xb
 483 003a 0B       		.uleb128 0xb
 484 003b 3A       		.uleb128 0x3a
 485 003c 0B       		.uleb128 0xb
 486 003d 3B       		.uleb128 0x3b
 487 003e 05       		.uleb128 0x5
 488 003f 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 15


 489 0040 13       		.uleb128 0x13
 490 0041 00       		.byte	0
 491 0042 00       		.byte	0
 492 0043 06       		.uleb128 0x6
 493 0044 28       		.uleb128 0x28
 494 0045 00       		.byte	0
 495 0046 03       		.uleb128 0x3
 496 0047 0E       		.uleb128 0xe
 497 0048 1C       		.uleb128 0x1c
 498 0049 0D       		.uleb128 0xd
 499 004a 00       		.byte	0
 500 004b 00       		.byte	0
 501 004c 07       		.uleb128 0x7
 502 004d 16       		.uleb128 0x16
 503 004e 00       		.byte	0
 504 004f 03       		.uleb128 0x3
 505 0050 0E       		.uleb128 0xe
 506 0051 3A       		.uleb128 0x3a
 507 0052 0B       		.uleb128 0xb
 508 0053 3B       		.uleb128 0x3b
 509 0054 05       		.uleb128 0x5
 510 0055 49       		.uleb128 0x49
 511 0056 13       		.uleb128 0x13
 512 0057 00       		.byte	0
 513 0058 00       		.byte	0
 514 0059 08       		.uleb128 0x8
 515 005a 2E       		.uleb128 0x2e
 516 005b 00       		.byte	0
 517 005c 03       		.uleb128 0x3
 518 005d 0E       		.uleb128 0xe
 519 005e 3A       		.uleb128 0x3a
 520 005f 0B       		.uleb128 0xb
 521 0060 3B       		.uleb128 0x3b
 522 0061 0B       		.uleb128 0xb
 523 0062 27       		.uleb128 0x27
 524 0063 19       		.uleb128 0x19
 525 0064 11       		.uleb128 0x11
 526 0065 01       		.uleb128 0x1
 527 0066 12       		.uleb128 0x12
 528 0067 06       		.uleb128 0x6
 529 0068 40       		.uleb128 0x40
 530 0069 18       		.uleb128 0x18
 531 006a 9642     		.uleb128 0x2116
 532 006c 19       		.uleb128 0x19
 533 006d 00       		.byte	0
 534 006e 00       		.byte	0
 535 006f 09       		.uleb128 0x9
 536 0070 2E       		.uleb128 0x2e
 537 0071 01       		.byte	0x1
 538 0072 3F       		.uleb128 0x3f
 539 0073 19       		.uleb128 0x19
 540 0074 03       		.uleb128 0x3
 541 0075 0E       		.uleb128 0xe
 542 0076 3A       		.uleb128 0x3a
 543 0077 0B       		.uleb128 0xb
 544 0078 3B       		.uleb128 0x3b
 545 0079 0B       		.uleb128 0xb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 16


 546 007a 49       		.uleb128 0x49
 547 007b 13       		.uleb128 0x13
 548 007c 11       		.uleb128 0x11
 549 007d 01       		.uleb128 0x1
 550 007e 12       		.uleb128 0x12
 551 007f 06       		.uleb128 0x6
 552 0080 40       		.uleb128 0x40
 553 0081 18       		.uleb128 0x18
 554 0082 9642     		.uleb128 0x2116
 555 0084 19       		.uleb128 0x19
 556 0085 01       		.uleb128 0x1
 557 0086 13       		.uleb128 0x13
 558 0087 00       		.byte	0
 559 0088 00       		.byte	0
 560 0089 0A       		.uleb128 0xa
 561 008a 34       		.uleb128 0x34
 562 008b 00       		.byte	0
 563 008c 03       		.uleb128 0x3
 564 008d 0E       		.uleb128 0xe
 565 008e 3A       		.uleb128 0x3a
 566 008f 0B       		.uleb128 0xb
 567 0090 3B       		.uleb128 0x3b
 568 0091 0B       		.uleb128 0xb
 569 0092 49       		.uleb128 0x49
 570 0093 13       		.uleb128 0x13
 571 0094 02       		.uleb128 0x2
 572 0095 18       		.uleb128 0x18
 573 0096 00       		.byte	0
 574 0097 00       		.byte	0
 575 0098 0B       		.uleb128 0xb
 576 0099 34       		.uleb128 0x34
 577 009a 00       		.byte	0
 578 009b 03       		.uleb128 0x3
 579 009c 0E       		.uleb128 0xe
 580 009d 3A       		.uleb128 0x3a
 581 009e 0B       		.uleb128 0xb
 582 009f 3B       		.uleb128 0x3b
 583 00a0 0B       		.uleb128 0xb
 584 00a1 49       		.uleb128 0x49
 585 00a2 13       		.uleb128 0x13
 586 00a3 3F       		.uleb128 0x3f
 587 00a4 19       		.uleb128 0x19
 588 00a5 3C       		.uleb128 0x3c
 589 00a6 19       		.uleb128 0x19
 590 00a7 00       		.byte	0
 591 00a8 00       		.byte	0
 592 00a9 00       		.byte	0
 593              		.section	.debug_aranges,"",%progbits
 594 0000 24000000 		.4byte	0x24
 595 0004 0200     		.2byte	0x2
 596 0006 00000000 		.4byte	.Ldebug_info0
 597 000a 04       		.byte	0x4
 598 000b 00       		.byte	0
 599 000c 0000     		.2byte	0
 600 000e 0000     		.2byte	0
 601 0010 00000000 		.4byte	.LFB35
 602 0014 40000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 17


 603 0018 00000000 		.4byte	.LFB36
 604 001c DC000000 		.4byte	.LFE36-.LFB36
 605 0020 00000000 		.4byte	0
 606 0024 00000000 		.4byte	0
 607              		.section	.debug_ranges,"",%progbits
 608              	.Ldebug_ranges0:
 609 0000 00000000 		.4byte	.LFB35
 610 0004 40000000 		.4byte	.LFE35
 611 0008 00000000 		.4byte	.LFB36
 612 000c DC000000 		.4byte	.LFE36
 613 0010 00000000 		.4byte	0
 614 0014 00000000 		.4byte	0
 615              		.section	.debug_line,"",%progbits
 616              	.Ldebug_line0:
 617 0000 D1000000 		.section	.debug_str,"MS",%progbits,1
 617      02006B00 
 617      00000201 
 617      FB0E0D00 
 617      01010101 
 618              	.LASF21:
 619 0000 4359424C 		.ascii	"CYBLE_BLESS_STATE_ACTIVE\000"
 619      455F424C 
 619      4553535F 
 619      53544154 
 619      455F4143 
 620              	.LASF16:
 621 0019 4359424C 		.ascii	"CYBLE_BLESS_SLEEP\000"
 621      455F424C 
 621      4553535F 
 621      534C4545 
 621      5000
 622              	.LASF29:
 623 002b 70726576 		.ascii	"previousTimestamp\000"
 623      696F7573 
 623      54696D65 
 623      7374616D 
 623      7000
 624              	.LASF3:
 625 003d 73686F72 		.ascii	"short unsigned int\000"
 625      7420756E 
 625      7369676E 
 625      65642069 
 625      6E7400
 626              	.LASF24:
 627 0050 4359424C 		.ascii	"CYBLE_BLESS_STATE_ECO_ON\000"
 627      455F424C 
 627      4553535F 
 627      53544154 
 627      455F4543 
 628              	.LASF37:
 629 0069 496E6974 		.ascii	"InitializeSystem\000"
 629      69616C69 
 629      7A655379 
 629      7374656D 
 629      00
 630              	.LASF11:
 631 007a 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 18


 631      7400
 632              	.LASF34:
 633 0080 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 633      4320342E 
 633      382E3420 
 633      32303134 
 633      30353236 
 634 00b3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 634      20726576 
 634      6973696F 
 634      6E203231 
 634      31333538 
 635 00e6 30202D66 		.ascii	"0 -ffunction-sections\000"
 635      66756E63 
 635      74696F6E 
 635      2D736563 
 635      74696F6E 
 636              	.LASF7:
 637 00fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 637      206C6F6E 
 637      6720756E 
 637      7369676E 
 637      65642069 
 638              	.LASF1:
 639 0113 756E7369 		.ascii	"unsigned char\000"
 639      676E6564 
 639      20636861 
 639      7200
 640              	.LASF35:
 641 0121 2E5C6D61 		.ascii	".\\main.c\000"
 641      696E2E63 
 641      00
 642              	.LASF5:
 643 012a 6C6F6E67 		.ascii	"long unsigned int\000"
 643      20756E73 
 643      69676E65 
 643      6420696E 
 643      7400
 644              	.LASF9:
 645 013c 75696E74 		.ascii	"uint8\000"
 645      3800
 646              	.LASF19:
 647 0142 4359424C 		.ascii	"CYBLE_BLESS_INVALID\000"
 647      455F424C 
 647      4553535F 
 647      494E5641 
 647      4C494400 
 648              	.LASF23:
 649 0156 4359424C 		.ascii	"CYBLE_BLESS_STATE_SLEEP\000"
 649      455F424C 
 649      4553535F 
 649      53544154 
 649      455F534C 
 650              	.LASF18:
 651 016e 4359424C 		.ascii	"CYBLE_BLESS_HIBERNATE\000"
 651      455F424C 
 651      4553535F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 19


 651      48494245 
 651      524E4154 
 652              	.LASF12:
 653 0184 646F7562 		.ascii	"double\000"
 653      6C6500
 654              	.LASF38:
 655 018b 6D61696E 		.ascii	"main\000"
 655      00
 656              	.LASF10:
 657 0190 75696E74 		.ascii	"uint32\000"
 657      333200
 658              	.LASF27:
 659 0197 4359424C 		.ascii	"CYBLE_BLESS_STATE_HIBERNATE\000"
 659      455F424C 
 659      4553535F 
 659      53544154 
 659      455F4849 
 660              	.LASF8:
 661 01b3 756E7369 		.ascii	"unsigned int\000"
 661      676E6564 
 661      20696E74 
 661      00
 662              	.LASF13:
 663 01c0 63686172 		.ascii	"char\000"
 663      00
 664              	.LASF17:
 665 01c5 4359424C 		.ascii	"CYBLE_BLESS_DEEPSLEEP\000"
 665      455F424C 
 665      4553535F 
 665      44454550 
 665      534C4545 
 666              	.LASF22:
 667 01db 4359424C 		.ascii	"CYBLE_BLESS_STATE_EVENT_CLOSE\000"
 667      455F424C 
 667      4553535F 
 667      53544154 
 667      455F4556 
 668              	.LASF39:
 669 01f9 656E7465 		.ascii	"enterHibernateFlag\000"
 669      72486962 
 669      65726E61 
 669      7465466C 
 669      616700
 670              	.LASF28:
 671 020c 4359424C 		.ascii	"CYBLE_BLESS_STATE_INVALID\000"
 671      455F424C 
 671      4553535F 
 671      53544154 
 671      455F494E 
 672              	.LASF14:
 673 0226 73697A65 		.ascii	"sizetype\000"
 673      74797065 
 673      00
 674              	.LASF6:
 675 022f 6C6F6E67 		.ascii	"long long int\000"
 675      206C6F6E 
 675      6720696E 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 20


 675      7400
 676              	.LASF26:
 677 023d 4359424C 		.ascii	"CYBLE_BLESS_STATE_DEEPSLEEP\000"
 677      455F424C 
 677      4553535F 
 677      53544154 
 677      455F4445 
 678              	.LASF32:
 679 0259 696E7465 		.ascii	"interruptStatus\000"
 679      72727570 
 679      74537461 
 679      74757300 
 680              	.LASF25:
 681 0269 4359424C 		.ascii	"CYBLE_BLESS_STATE_ECO_STABLE\000"
 681      455F424C 
 681      4553535F 
 681      53544154 
 681      455F4543 
 682              	.LASF2:
 683 0286 73686F72 		.ascii	"short int\000"
 683      7420696E 
 683      7400
 684              	.LASF20:
 685 0290 4359424C 		.ascii	"CYBLE_LP_MODE_T\000"
 685      455F4C50 
 685      5F4D4F44 
 685      455F5400 
 686              	.LASF4:
 687 02a0 6C6F6E67 		.ascii	"long int\000"
 687      20696E74 
 687      00
 688              	.LASF30:
 689 02a9 63757272 		.ascii	"currentTimestamp\000"
 689      656E7454 
 689      696D6573 
 689      74616D70 
 689      00
 690              	.LASF0:
 691 02ba 7369676E 		.ascii	"signed char\000"
 691      65642063 
 691      68617200 
 692              	.LASF15:
 693 02c6 4359424C 		.ascii	"CYBLE_BLESS_ACTIVE\000"
 693      455F424C 
 693      4553535F 
 693      41435449 
 693      564500
 694              	.LASF36:
 695 02d9 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\GitHub\\Lab3\\BLE Lab 3\\"
 695      73657273 
 695      5C41646D 
 695      696E5C44 
 695      65736B74 
 696 0306 424C4520 		.ascii	"BLE Lab 3.cydsn\000"
 696      4C616220 
 696      332E6379 
 696      64736E00 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8Mcl1u.s 			page 21


 697              	.LASF33:
 698 0316 5F426F6F 		.ascii	"_Bool\000"
 698      6C00
 699              	.LASF31:
 700 031c 626C654D 		.ascii	"bleMode\000"
 700      6F646500 
 701              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
